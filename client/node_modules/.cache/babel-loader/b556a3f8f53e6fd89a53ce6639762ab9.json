{"ast":null,"code":"var _jsxFileName = \"/Users/virendra/Downloads/stockmarket/client/src/components/StocksList.js\";\nimport React, { Component } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class StocksList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      stocks: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/api/stocks', {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"*/*\"\n      }\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        stocks: data\n      });\n    }, error => {\n      this.setState({\n        error: error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      stocks\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Error:\", error.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Stocks List \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" #ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Stock Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Current Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Last Updated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Action \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), stocks.map(stock => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", stock.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", stock.stockName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", stock.currentPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", stock.lastUpdate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)]\n          }, stock.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/virendra/Downloads/stockmarket/client/src/components/StocksList.js"],"names":["React","Component","Container","Button","Table","StocksList","constructor","props","state","error","stocks","componentDidMount","fetch","method","headers","then","response","json","data","setState","render","message","map","stock","id","stockName","currentPrice","lastUpdate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAR,EAAmBC,MAAnB,QAAgC,iBAAhC;AACA,SAAQC,KAAR,QAAoB,iBAApB;;AAEA,eAAe,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAC9CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACtCC,MAAAA,MAAM,EAAE,KAD8B;AAEtCC,MAAAA,OAAO,EAAC;AACJ,wBAAgB,kBADZ;AAEJ,kBAAW;AAFP;AAF8B,KAArC,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAPhB,EAQCF,IARD,CAQMG,IAAI,IAAG;AACT,WAAKC,QAAL,CAAc;AACVT,QAAAA,MAAM,EAACQ;AADG,OAAd;AAGC,KAZL,EAaIT,KAAK,IAAG;AACJ,WAAKU,QAAL,CAAc;AACVV,QAAAA,KAAK,EAACA;AADI,OAAd;AAGH,KAjBL;AAoBH;;AACDW,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACX,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAkB,KAAKF,KAA7B;;AACA,QAAGC,KAAH,EAAU;AACN,0BACI;AAAA,8BAAaA,KAAK,CAACY,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAIO;AACH,0BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAA,kCACI;AAAA,mCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,EAWKX,MAAM,CAACY,GAAP,CAAYC,KAAK,iBACd;AAAA,oCACI;AAAA,8BAAMA,KAAK,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,8BAAMD,KAAK,CAACE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,8BAAMF,KAAK,CAACG,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,8BAAMH,KAAK,CAACI,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA,aAASJ,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,kBADH,CAXL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAyBH;AAGJ;;AAlE6C","sourcesContent":["import React, { Component } from 'react';\nimport {Container, Button} from 'react-bootstrap'\nimport {Table} from 'react-bootstrap';\n\nexport default class StocksList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            stocks: []\n        };\n    }\n    componentDidMount() {\n        fetch('http://localhost:8080/api/stocks', {\n            method: \"GET\",\n            headers:{\n                \"content-type\": \"application/json\",\n                \"accept\" : \"*/*\",\n            },\n        })\n        .then(response=>response.json())\n        .then(data =>{\n            this.setState({\n                stocks:data\n                })\n            },\n            error=> {\n                this.setState({\n                    error:error\n                })\n            }\n\n        )\n    }\n    render() {\n\n        const {error, stocks} = this.state;\n        if(error) {\n            return (\n                <div> Error:{error.message} </div>\n            )\n        } else {\n            return (\n                <div>\n                    <h2> Stocks List </h2>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th> #ID</th>\n                                <th> Stock Name</th>\n                                <th> Current Price</th>\n                                <th> Last Updated</th>\n                                <th> Action </th>\n\n                            </tr>\n                        </thead>\n                        {stocks.map( stock=> (\n                            <tr key={stock.id}>\n                                <td> {stock.id}</td>\n                                <td> {stock.stockName}</td>\n                                <td> {stock.currentPrice}</td>\n                                <td> {stock.lastUpdate}</td>\n                            </tr>\n                        ))}\n                    </Table>\n                </div>\n            )\n        }\n\n\n    }\n}"]},"metadata":{},"sourceType":"module"}